#!/bin/bash

################################################################################
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################

exists() {
    type $1 > /dev/null 2>&1
}

INFO(){
    /bin/echo '[INFO]' $@
}

ERROR(){
    /bin/echo '[ERROR]' $@
}

exists ssh-keygen || { ERROR "Please install ssh-keygen"; exit 1; }

SCRIPT_PATH=`realpath $0`
SCRIPT_FOLDER_PATH=`dirname ${SCRIPT_PATH}`

if [ ! -f ${SCRIPT_FOLDER_PATH}/secret ]; then
    mkdir -p -m 755 ${SCRIPT_FOLDER_PATH}/secret
fi
if [ ! -f ${SCRIPT_FOLDER_PATH}/secret/node.env ]; then
    INFO "Generating key pair"
    ssh-keygen -t rsa -N "" -f ${SCRIPT_FOLDER_PATH}/secret/id_rsa -C "epam.com"

    INFO 'Generating '${SCRIPT_FOLDER_PATH}'/secret/control.env'
    echo '# generated by '${SCRIPT_PATH} > ${SCRIPT_FOLDER_PATH}/secret/control.env
    echo '# NOTE: \\n is expressed as ↩' >> ${SCRIPT_FOLDER_PATH}/secret/control.env
    echo SSH_PRIVATE_KEY="$(cat ${SCRIPT_FOLDER_PATH}/secret/id_rsa | sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/↩/g')" >> ${SCRIPT_FOLDER_PATH}/secret/control.env
    echo SSH_PUBLIC_KEY=$(cat ${SCRIPT_FOLDER_PATH}/secret/id_rsa.pub) >> ${SCRIPT_FOLDER_PATH}/secret/control.env

    INFO 'Generating '${SCRIPT_FOLDER_PATH}'/secret/node.env'
    echo '# generated by '${SCRIPT_PATH} > ${SCRIPT_FOLDER_PATH}/secret/node.env
    echo AUTHORIZED_KEYS=$(cat ${SCRIPT_FOLDER_PATH}/secret/id_rsa.pub) >> ${SCRIPT_FOLDER_PATH}/secret/node.env
else
    INFO "No need to generate key pair"
fi

exists docker || { ERROR "Please install docker"; exit 1; }
exists docker-compose || { ERROR "Please install docker-compose"; exit 1; }

INFO "Cleaning images"
docker container prune -f --filter image='java-base' --filter image='jepsen-control'
docker rmi -f 'java-base' 'jepsen-control'
INFO "Building images"
docker build -t java-base ${SCRIPT_FOLDER_PATH}/base/.
docker build -t jepsen-control ${SCRIPT_FOLDER_PATH}/jepsen-control/.
